{{if env.Getenv "GOGO"}}// Code generated by compiling proto template. DO NOT EDIT.
// protoc --proto_path=$GOPATH/src:$GOPATH/src/github.com/centrifugal/centrifugo/vendor:. --gogofaster_out=plugins=grpc:. api.proto
// python3 -m grpc_tools.protoc --proto_path $GOPATH/src:$GOPATH/src/github.com/centrifugal/centrifugo/vendor:. --python_out=. --grpc_python_out=. api.proto{{end}}
syntax = "proto3";

package apiproto;

{{if env.Getenv "GOGO"}}import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;{{end}}

message ClientInfo {
    string User = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "user"]{{end}};
    string Client = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "client"]{{end}};
    bytes ConnInfo = 3{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "conn_info,omitempty", (gogoproto.nullable) = false]{{end}};
    bytes ChanInfo = 4{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "chan_info,omitempty", (gogoproto.nullable) = false]{{end}};
}

message Publication {
    string UID = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "uid,omitempty"]{{end}};
    bytes Data = 2{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
    ClientInfo Info = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "info,omitempty"]{{end}};
}

message Error {
    uint32 Code = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "code"]{{end}};
    string Message = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "message"]{{end}};
}

enum MethodType {
    {{if env.Getenv "GOGO"}}option (gogoproto.goproto_enum_prefix) = false;{{end}}

    PUBLISH = 0{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypePublish"]{{end}};
    BROADCAST = 1{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeBroadcast"]{{end}};
    UNSUBSCRIBE = 2{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeUnsubscribe"]{{end}};
    DISCONNECT = 3{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeDisconnect"]{{end}};
    PRESENCE = 4{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypePresence"]{{end}};
    PRESENCE_STATS = 5{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypePresenceStats"]{{end}};
    HISTORY = 6{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeHistory"]{{end}};
    CHANNELS = 7{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeChannels"]{{end}};
    INFO = 8{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeInfo"]{{end}};
}

message Command {
    uint64 ID = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "id"]{{end}};
    MethodType Method = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "method"]{{end}};
    bytes Params = 3{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "params", (gogoproto.nullable) = false]{{end}};
}

message Reply {
    uint64 ID = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "id,omitempty"]{{end}};
    Error Error = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    bytes Result = 3{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "result,omitempty", (gogoproto.nullable) = false]{{end}};
}

message PublishRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
    bytes Data = 2{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
    string UID = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "uid"]{{end}};
}

message PublishResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    PublishResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message PublishResult {}

message BroadcastRequest {
    repeated string Channels = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channels"]{{end}};
    bytes Data = 2{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
    string UID = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "uid"]{{end}};
}

message BroadcastResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    BroadcastResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message BroadcastResult {}

message UnsubscribeRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
    string User = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "user"]{{end}};
}

message UnsubscribeResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    UnsubscribeResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message UnsubscribeResult {}

message DisconnectRequest {
    string User = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "user"]{{end}};
}

message DisconnectResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    DisconnectResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message DisconnectResult {}

message PresenceRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
}

message PresenceResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    PresenceResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message PresenceResult {
    map<string, ClientInfo> Presence = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "presence"]{{end}};
}

message PresenceStatsRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
}

message PresenceStatsResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    PresenceStatsResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message PresenceStatsResult {
    uint64 NumClients = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "num_clients"]{{end}};
    uint64 NumUsers = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "num_users"]{{end}};
}

message HistoryRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
}

message HistoryResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    HistoryResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message HistoryResult {
    repeated Publication Publications = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "publications", (gogoproto.nullable) = true]{{end}};
}

message ChannelsRequest {}

message ChannelsResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    ChannelsResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message ChannelsResult {
    repeated string Channels = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channels"]{{end}};
}

message InfoRequest {}

message InfoResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    InfoResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message InfoResult {
    string Engine = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "engine"]{{end}};
    repeated NodeResult Nodes = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "nodes"]{{end}};
}

message NodeResult {
    string UID = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "uid"]{{end}};
    string Name = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "name"]{{end}};
    string Version = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "version"]{{end}};
    uint64 NumClients = 4{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "num_clients"]{{end}};
    uint64 NumUsers = 5{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "num_users"]{{end}};
    uint64 NumChannels = 6{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "num_channels"]{{end}};
    uint64 Uptime = 7{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "uptime"]{{end}};
}

service Centrifugo {
    rpc Publish (PublishRequest) returns (PublishResponse) {}
    rpc Broadcast (BroadcastRequest) returns (BroadcastResponse) {}
    rpc Unsubscribe (UnsubscribeRequest) returns (UnsubscribeResponse) {}
    rpc Disconnect (DisconnectRequest) returns (DisconnectResponse) {}
    rpc Presence (PresenceRequest) returns (PresenceResponse) {}
    rpc PresenceStats (PresenceStatsRequest) returns (PresenceStatsResponse) {}
    rpc History (HistoryRequest) returns (HistoryResponse) {}
    rpc Channels (ChannelsRequest) returns (ChannelsResponse) {}
    rpc Info (InfoRequest) returns (InfoResponse) {}
}
