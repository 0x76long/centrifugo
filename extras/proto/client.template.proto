{{if env.Getenv "GOGO"}}// Code generated by compiling proto template. DO NOT EDIT.
// protoc --proto_path=$GOPATH/src:$GOPATH/src/github.com/centrifugal/centrifugo/vendor:. --gogofaster_out=plugins=grpc:. client.proto
// pbjs -t json -p $GOPATH/src proto/client/client.proto > public/client.json
// pbjs -t json proto/message.proto > public/message.json{{end}}
syntax = "proto3";

package proto;

{{if env.Getenv "GOGO"}}import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;{{end}}

message Error {
    uint32 Code = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "code"]{{end}};
    string Message = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "message"]{{end}};
}

enum MethodType {
    {{if env.Getenv "GOGO"}}option (gogoproto.goproto_enum_prefix) = false;{{end}}

    CONNECT = 0{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeConnect"]{{end}};
    REFRESH = 1{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeRefresh"]{{end}};
    SUBSCRIBE = 2{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeSubscribe"]{{end}};
    UNSUBSCRIBE = 3{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeUnsubscribe"]{{end}};
    PUBLISH = 4{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypePublish"]{{end}};
    PRESENCE = 5{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypePresence"]{{end}};
    PRESENCE_STATS = 6{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypePresenceStats"]{{end}};
    HISTORY = 7{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeHistory"]{{end}};
    PING = 8{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypePing"]{{end}};
    RPC = 9{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeRPC"]{{end}};
    MESSAGE = 10{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MethodTypeMessage"]{{end}};
}

message Command {
    uint64 ID = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "id,omitempty"]{{end}};
    MethodType Method = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "method,omitempty"]{{end}};
    bytes Params = 3{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "params,omitempty", (gogoproto.nullable) = false]{{end}};
}

message Reply {
    uint64 ID = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "id,omitempty"]{{end}};
    proto.Error Error = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    bytes Result = 3{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "result,omitempty", (gogoproto.nullable) = false]{{end}};
}

enum MessageType {
    {{if env.Getenv "GOGO"}}option (gogoproto.goproto_enum_prefix) = false;{{end}}

    PUBLICATION = 0{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MessageTypePublication"]{{end}};
    JOIN = 1{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MessageTypeJoin"]{{end}};
    LEAVE = 2{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MessageTypeLeave"]{{end}};
    UNSUB = 3{{if env.Getenv "GOGO"}} [(gogoproto.enumvalue_customname) = "MessageTypeUnsub"]{{end}};
}

message Message {
    MessageType Type = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "type,omitempty"]{{end}};
    string Channel = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel,omitempty"]{{end}};
    bytes Data = 3{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
}

message ClientInfo {
    string User = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "user"]{{end}};
    string Client = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "client"]{{end}};
    bytes ConnInfo = 3{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "conn_info,omitempty", (gogoproto.nullable) = false]{{end}};
    bytes ChanInfo = 4{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "chan_info,omitempty", (gogoproto.nullable) = false]{{end}};
}

message Publication {
    string UID = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "uid,omitempty"]{{end}};
    bytes Data = 2{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
    ClientInfo Info = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "info,omitempty"]{{end}};
}

message Join {
    ClientInfo Info = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
}

message Leave {
    ClientInfo Info = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
}

message Unsub {}

message ConnectRequest {
    string User = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "user"]{{end}};
    string Exp = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "exp"]{{end}};
    string Info = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "info"]{{end}};
    string Opts = 4{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "opts"]{{end}};
    string Sign = 5{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "sign"]{{end}};
}

message ConnectResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    ConnectResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message ConnectResult {
    string Client = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "client"]{{end}};
    string Version = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "version"]{{end}};
    bool Expires = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "expires,omitempty"]{{end}};
    bool Expired = 4{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "expired,omitempty"]{{end}};
    uint32 TTL = 5{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "ttl,omitempty"]{{end}};
}

message RefreshRequest {
    string User = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "user"]{{end}};
    string Exp = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "exp"]{{end}};
    string Info = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "info"]{{end}};
    string Opts = 4{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "opts"]{{end}};
    string Sign = 5{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "sign"]{{end}};
}

message RefreshResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    RefreshResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message RefreshResult {
    string Client = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "client"]{{end}};
    string Version = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "version"]{{end}};
    bool Expires = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "expires,omitempty"]{{end}};
    bool Expired = 4{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "expired,omitempty"]{{end}};
    uint32 TTL = 5{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "ttl,omitempty"]{{end}};
}

message SubscribeRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
    string Client = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "client"]{{end}};
    string Info = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "info"]{{end}};
    string Sign = 4{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "sign"]{{end}};
    bool Recover = 5{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "recover"]{{end}};
    string Last = 6{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "last"]{{end}};
}

message SubscribeResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    SubscribeResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message SubscribeResult {
    string Last = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "last,omitempty"]{{end}};
    bool Recovered = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "recovered,omitempty"]{{end}};
    repeated Publication Publications = 3{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "publications,omitempty"]{{end}};
}

message UnsubscribeRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
}

message UnsubscribeResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    UnsubscribeResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message UnsubscribeResult {}

message PublishRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
    bytes Data = 2{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
}

message PublishResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    PublishResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message PublishResult {}

message PresenceRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
}

message PresenceResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    PresenceResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message PresenceResult {
    map<string, ClientInfo> Presence = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "presence"]{{end}};
}

message PresenceStatsRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
}

message PresenceStatsResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    PresenceStatsResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message PresenceStatsResult {
    uint64 NumClients = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "num_clients"]{{end}};
    uint64 NumUsers = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "num_users"]{{end}};
}

message HistoryRequest {
    string Channel = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "channel"]{{end}};
}

message HistoryResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    HistoryResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message HistoryResult {
    repeated Publication Publications = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "publications"]{{end}};
}

message PingRequest {
    string Data = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "data"]{{end}};
}

message PingResponse {
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    PingResult Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

message PingResult {
    string Data = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "data"]{{end}};
}

message RPCRequest{
    bytes Data = 1{{if env.Getenv "GOGO"}} [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false]{{end}};
}

message RPCResponse{
    Error Error = 1{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "error,omitempty"]{{end}};
    bytes Result = 2{{if env.Getenv "GOGO"}} [(gogoproto.jsontag) = "result,omitempty"]{{end}};
}

service Centrifugo {
    rpc Communicate(stream Command) returns (stream Reply) {}
}
