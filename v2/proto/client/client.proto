syntax = "proto3";
// protoc --proto_path=../../../../vendor/:../../../../../centrifugo/:. --gogofaster_out=. client.proto
package client;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "libcentrifugo/v2/proto/message.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;

message RequestWrapper {
    bool Multi = 1 [(gogoproto.jsontag) = "m"];
    bytes Data = 2 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "d", (gogoproto.nullable) = false];
}

message Request {
    uint64 ID = 1 [(gogoproto.jsontag) = "i"];
    string Method = 2 [(gogoproto.jsontag) = "m"];
    bytes Params = 3 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "p", (gogoproto.nullable) = false];
}

message MultiRequest {
    repeated Request Requests = 1 [(gogoproto.jsontag) = "r"];
}

message Error {
    uint32 Code = 1 [(gogoproto.jsontag) = "code"];
    string Message = 2 [(gogoproto.jsontag) = "message"];
}

message ResponseWrapper {
    bool Multi = 1;
    bytes Data = 2 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "d", (gogoproto.nullable) = false]; 
}

message Response {
    uint64 ID = 1 [(gogoproto.jsontag) = "i"];
    Error Err = 2 [(gogoproto.jsontag) = "e"];
    bytes Result = 3 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "r", (gogoproto.nullable) = false];
}

message MultiResponse {
    repeated Response Responses = 1 [(gogoproto.jsontag) = "r"];
}

message Connect {
    string User = 1 [(gogoproto.jsontag) = "user"];
    string Timestamp = 2 [(gogoproto.jsontag) = "timestamp"];
    string Info = 3 [(gogoproto.jsontag) = "info"];
    string Token = 4 [(gogoproto.jsontag) = "token"];
}

message Refresh {
    string User = 1 [(gogoproto.jsontag) = "user"];
    string Timestamp = 2 [(gogoproto.jsontag) = "timestamp"];
    string Info = 3 [(gogoproto.jsontag) = "info"];
    string Token = 4 [(gogoproto.jsontag) = "token"];
}

message Subscribe {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
    string Client = 2 [(gogoproto.jsontag) = "client"];
    string Info = 3 [(gogoproto.jsontag) = "info"];
    string Sign = 4 [(gogoproto.jsontag) = "sign"];
    bool Recover = 5 [(gogoproto.jsontag) = "recover"];
    string Last = 6 [(gogoproto.jsontag) = "last"];
    bool Passive = 7 [(gogoproto.jsontag) = "passive"];
}

message SubscribeResult {
    string Last = 1;
    repeated centrifugo.proto.Message Messages = 2;
    bool Recovered = 3;
}

message Unsubscribe {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
}

message UnsubscribeResult {}

message Publish {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
    bytes Data = 2 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
}

message PublishResult {}

message Presence {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
}

message PresenceResult {
    map<string, centrifugo.proto.ClientInfo> Data = 1 [(gogoproto.jsontag) = "data"];
}

message History {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
}

message HistoryResult {
    repeated centrifugo.proto.Message Data = 1 [(gogoproto.jsontag) = "data"];
}

message Ping {
    string Data = 1 [(gogoproto.jsontag) = "data"];
}

message PingResult {
    string Data = 1 [(gogoproto.jsontag) = "data"];
}
