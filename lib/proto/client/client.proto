// protoc --proto_path=$GOPATH/src:$GOPATH/src/github.com/centrifugal/centrifugo/vendor:. --gogofaster_out=. client.proto
// pbjs -t json -p $GOPATH/src proto/client/client.proto > public/client.json
// pbjs -t json proto/message.proto > public/message.json
syntax = "proto3";

package client;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/centrifugal/centrifugo/lib/proto/message.proto";
import "github.com/centrifugal/centrifugo/lib/proto/error.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;

message Command {
    uint64 ID = 1 [(gogoproto.jsontag) = "id,omitempty"];
    string Method = 2 [(gogoproto.jsontag) = "method,omitempty"];
    bytes Params = 3 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "params,omitempty", (gogoproto.nullable) = false];
}

message Reply {
    uint64 ID = 1 [(gogoproto.jsontag) = "id,omitempty"];
    proto.Error Error = 2 [(gogoproto.jsontag) = "error,omitempty"];
    bytes Result = 3 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "result,omitempty", (gogoproto.nullable) = false];
}

message Connect {
    string User = 1 [(gogoproto.jsontag) = "user"];
    string Time = 2 [(gogoproto.jsontag) = "time"];
    string Info = 3 [(gogoproto.jsontag) = "info"];
    string Opts = 4 [(gogoproto.jsontag) = "opts"];
    string Sign = 5 [(gogoproto.jsontag) = "sign"];
}

message ConnectResult {
    string Client = 1 [(gogoproto.jsontag) = "client"];
    string Version = 2 [(gogoproto.jsontag) = "version"];
    bool Expires = 3 [(gogoproto.jsontag) = "expires,omitempty"];
    bool Expired = 4 [(gogoproto.jsontag) = "expired,omitempty"];
    uint32 TTL = 5 [(gogoproto.jsontag) = "ttl,omitempty"];
}

message Refresh {
    string User = 1 [(gogoproto.jsontag) = "user"];
    string Time = 2 [(gogoproto.jsontag) = "time"];
    string Info = 3 [(gogoproto.jsontag) = "info"];
    string Opts = 4 [(gogoproto.jsontag) = "opts"];
    string Sign = 5 [(gogoproto.jsontag) = "sign"];
}

message RefreshResult {
    string Client = 1 [(gogoproto.jsontag) = "client"];
    string Version = 2 [(gogoproto.jsontag) = "version"];
    bool Expires = 3 [(gogoproto.jsontag) = "expires,omitempty"];
    bool Expired = 4 [(gogoproto.jsontag) = "expired,omitempty"];
    uint32 TTL = 5 [(gogoproto.jsontag) = "ttl,omitempty"];
}

message Subscribe {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
    string Client = 2 [(gogoproto.jsontag) = "client"];
    string Info = 3 [(gogoproto.jsontag) = "info"];
    string Sign = 4 [(gogoproto.jsontag) = "sign"];
    bool Recover = 5 [(gogoproto.jsontag) = "recover"];
    string Last = 6 [(gogoproto.jsontag) = "last"];
    bool Passive = 7 [(gogoproto.jsontag) = "passive"];
}

message SubscribeResult {
    string Last = 1 [(gogoproto.jsontag) = "last,omitempty"];
    bool Recovered = 2 [(gogoproto.jsontag) = "recovered,omitempty"];
    repeated proto.Publication Publications = 3 [(gogoproto.jsontag) = "publications,omitempty"];
}

message Unsubscribe {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
}

message UnsubscribeResult {}

message Publish {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
    bytes Data = 2 [(gogoproto.customtype) = "github.com/centrifugal/centrifugo/lib/proto.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
}

message PublishResult {}

message Presence {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
}

message PresenceResult {
    map<string, proto.ClientInfo> Presence = 1 [(gogoproto.jsontag) = "presence"];
}

message PresenceStats {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
}

message PresenceStatsResult {
    uint64 NumClients = 1 [(gogoproto.jsontag) = "num_clients"];
    uint64 NumUsers = 2 [(gogoproto.jsontag) = "num_users"];
}

message History {
    string Channel = 1 [(gogoproto.jsontag) = "channel"];
}

message HistoryResult {
    repeated proto.Publication Publications = 1 [(gogoproto.jsontag) = "publications"];
}

message Ping {
    string Data = 1 [(gogoproto.jsontag) = "data"];
}

message PingResult {
    string Data = 1 [(gogoproto.jsontag) = "data"];
}
