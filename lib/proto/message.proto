// protoc --proto_path=../../vendor/:. --gogofaster_out=. message.proto
syntax = "proto3";

package proto;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;

enum MessageType {
    option (gogoproto.goproto_enum_prefix) = false;

    PUBLICATION = 0 [(gogoproto.enumvalue_customname) = "MessageTypePublication"];
    JOIN = 1 [(gogoproto.enumvalue_customname) = "MessageTypeJoin"];
    LEAVE = 2 [(gogoproto.enumvalue_customname) = "MessageTypeLeave"];
    UNSUBSCRIBE = 3 [(gogoproto.enumvalue_customname) = "MessageTypeUnsubscribe"];
}

message Message {
    MessageType Type = 1 [(gogoproto.jsontag) = "t,omitempty"];
    string Channel = 3 [(gogoproto.jsontag) = "c,omitempty"];
    bytes Data = 4 [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "d", (gogoproto.nullable) = false];
}

message ClientInfo {
  string User = 1 [(gogoproto.jsontag) = "user"];
  string Client = 2 [(gogoproto.jsontag) = "client"];
  bytes ConnInfo = 3 [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "conn_info,omitempty", (gogoproto.nullable) = false];
  bytes ChanInfo = 4 [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "chan_info,omitempty", (gogoproto.nullable) = false];
}

message Publication {
  string UID = 1 [(gogoproto.jsontag) = "uid,omitempty"];
  bytes Data = 2 [(gogoproto.customtype) = "Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
  ClientInfo Info = 3 [(gogoproto.jsontag) = "info,omitempty"];
}

message Join {
  ClientInfo Info = 1 [(gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
}

message Leave {
  ClientInfo Info = 1 [(gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
}

message Unsubscribe {}
